diff --git a/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js b/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js
--- a/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js
+++ b/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js
@@ -1327,25 +1327,95 @@ function testDuplicateError() {
           ok(text.indexOf("fooDuplicateError1", error1pos + 1) == -1,
             "no duplicate for fooDuplicateError1");
         }
 
         ok(text.indexOf("test-duplicate-error.html") > -1,
           "found test-duplicate-error.html");
 
         text = null;
-        testWebConsoleClose();
+        testOutputCopy();
       });
     }
   };
 
   Services.console.registerListener(consoleObserver);
   content.location = TEST_DUPLICATE_ERROR_URI;
 }
 
+function testOutputCopy()
+{
+  // See bugs 574036, 586386 and 587617.
+
+  let HUD = HUDService.getDisplayByURISpec(content.location.href);
+  let filterBox = HUD.querySelector(".hud-filter-box");
+  let outputNode = HUD.querySelector(".hud-output-node");
+  let selection = getSelection();
+  let jstermInput = HUD.querySelector(".jsterm-input-node");
+  let console = content.wrappedJSObject.console;
+  let contentSelection = content.getSelection();
+  filterBox.value = "";
+  HUDService.updateFilterText(filterBox);
+
+  let make_selection = function () {
+    let controller = top.document.commandDispatcher.
+      getControllerForCommand("cmd_copy");
+    is(controller.isCommandEnabled("cmd_copy"), false, "cmd_copy is disabled");
+
+    console.log("Hello world!");
+
+    let range = document.createRange();
+    let selectedNode = outputNode.querySelector(".hud-group > label:last-child");
+    range.selectNode(selectedNode);
+    selection.addRange(range);
+
+    selectedNode.focus();
+
+    goUpdateCommand("cmd_copy");
+
+    controller = top.document.commandDispatcher.
+      getControllerForCommand("cmd_copy");
+    is(controller.isCommandEnabled("cmd_copy"), true, "cmd_copy is enabled");
+
+    waitForClipboard(selectedNode.textContent, clipboard_setup,
+      clipboard_copy_done, clipboard_copy_done);
+  };
+
+  let clipboard_setup = function () {
+    goDoCommand("cmd_copy");
+  };
+
+  let clipboard_copy_done = function () {
+    selection.removeAllRanges();
+    testWebConsoleClose();
+  };
+
+  // Check if we first need to clear any existing selections.
+  if (selection.rangeCount > 0 || contentSelection.rangeCount > 0 ||
+      jstermInput.selectionStart != jstermInput.selectionEnd) {
+    if (jstermInput.selectionStart != jstermInput.selectionEnd) {
+      jstermInput.selectionStart = jstermInput.selectionEnd = 0;
+    }
+
+    if (selection.rangeCount > 0) {
+      selection.removeAllRanges();
+    }
+
+    if (contentSelection.rangeCount > 0) {
+      contentSelection.removeAllRanges();
+    }
+
+    goUpdateCommand("cmd_copy");
+    make_selection();
+  }
+  else {
+    make_selection();
+  }
+}
+
 /**
  * Unit test for bug 580001:
  * 'Close console after completion causes error "inputValue is undefined"'
  */
 function testWebConsoleClose() {
   let display = HUDService.getDisplayByURISpec(content.location.href);
   let input = display.querySelector(".jsterm-input-node");
 
diff --git a/toolkit/themes/gnomestripe/global/webConsole.css b/toolkit/themes/gnomestripe/global/webConsole.css
--- a/toolkit/themes/gnomestripe/global/webConsole.css
+++ b/toolkit/themes/gnomestripe/global/webConsole.css
@@ -16,17 +16,18 @@
  * The Initial Developer of the Original Code is
  *   Mozilla Corporation
  * Portions created by the Initial Developer are Copyright (C) 2010
  * the Initial Developer. All Rights Reserved.
  *
  * Contributor(s):
  *   David Dahl <ddahl@mozilla.com>
  *   Patrick Walton <pcwalton@mozilla.com>
-
+ *   Mihai È˜ucan <mihai.sucan@gmail.com>
+ *
  * Alternatively, the contents of this file may be used under the terms of
  * either the GNU General Public License Version 2 or later (the "GPL"), or
  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  * in which case the provisions of the GPL or the LGPL are applicable instead
  * of those above. If you wish to allow use of your version of this file only
  * under the terms of either the GPL or the LGPL, and not to allow others to
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
@@ -51,17 +52,17 @@
 }
 
 .hud-main-label {
     font-size: 1em;
     padding-top: 0.33em;
     font-weight: bold;
 }
 
-.hud-output-node div {
+.hud-output-node * {
     -moz-user-select: text;
     white-space: pre-wrap;
     -moz-user-focus: normal;
 }
 
 .hud-output-node .hud-network {
     color: blue;
 }
