diff --git a/toolkit/components/console/hudservice/tests/browser/browser_webconsole_bug_595934_message_categories.js b/toolkit/components/console/hudservice/tests/browser/browser_webconsole_bug_595934_message_categories.js
--- a/toolkit/components/console/hudservice/tests/browser/browser_webconsole_bug_595934_message_categories.js
+++ b/toolkit/components/console/hudservice/tests/browser/browser_webconsole_bug_595934_message_categories.js
@@ -103,79 +103,100 @@ const TESTS = [
     file: "test-bug-595934-image.html",
     category: "Image",
     matchString: "corrupt",
   },
 ];
 
 let pos = -1;
 
+let foundCategory = false;
+let foundText = false;
+let output = null;
+let jsterm = null;
+
 let TestObserver = {
   QueryInterface: XPCOMUtils.generateQI([Ci.nsIObserver]),
 
   observe: function test_observe(aSubject)
   {
     if (!(aSubject instanceof Ci.nsIScriptError)) {
       return;
     }
 
     is(aSubject.category, TESTS[pos].category,
       "test #" + pos + ": error category '" + TESTS[pos].category + "'");
 
     if (aSubject.category == TESTS[pos].category) {
-      executeSoon(performTest);
+      foundCategory = true;
+      if (foundText) {
+        executeSoon(testNext);
+      }
     }
     else {
-      testEnd();
+      executeSoon(finish);
     }
   }
 };
 
 function tabLoad(aEvent) {
   browser.removeEventListener(aEvent.type, arguments.callee, true);
 
   openConsole();
 
   let hudId = HUDService.getHudIdByWindow(content);
-  hud = HUDService.hudReferences[hudId];
+  let hud = HUDService.hudReferences[hudId];
+  output = hud.outputNode;
+  output.addEventListener("DOMNodeInserted", onDOMNodeInserted, false);
+  jsterm = hud.jsterm;
 
   Services.console.registerListener(TestObserver);
 
   executeSoon(testNext);
 }
 
 function testNext() {
-  hud.jsterm.clearOutput();
+  jsterm.clearOutput();
+  foundCategory = false;
+  foundText = false;
 
   pos++;
   if (pos < TESTS.length) {
     if (TESTS[pos].onload) {
       browser.addEventListener("load", function(aEvent) {
         browser.removeEventListener(aEvent.type, arguments.callee, true);
         TESTS[pos].onload(aEvent);
       }, true);
     }
 
     content.location = TESTS_PATH + TESTS[pos].file;
   }
   else {
-    testEnd();
+    executeSoon(finish);
   }
 }
 
 function testEnd() {
   Services.console.unregisterListener(TestObserver);
+  output.removeEventListener("DOMNodeInserted", onDOMNodeInserted, false);
+  output = jsterm = null;
   finishTest();
 }
 
-function performTest() {
-  let textContent = hud.outputNode.textContent;
-  isnot(textContent.indexOf(TESTS[pos].matchString), -1,
-    "test #" + pos + ": message found '" + TESTS[pos].matchString + "'");
+function onDOMNodeInserted(aEvent) {
+  let textContent = output.textContent;
+  foundText = textContent.indexOf(TESTS[pos].matchString) > -1;
+  if (foundText) {
+    ok(foundText, "test #" + pos + ": message found '" + TESTS[pos].matchString + "'");
+  }
 
-  testNext();
+  if (foundCategory) {
+    executeSoon(testNext);
+  }
 }
 
 function test() {
+  registerCleanupFunction(testEnd);
+
   addTab("data:text/html,Web Console test for bug 595934 - message categories coverage.");
   browser.addEventListener("load", tabLoad, true);
 }
 
