diff -r 01877f113dab toolkit/components/console/hudservice/HUDService.jsm
--- a/toolkit/components/console/hudservice/HUDService.jsm	Fri Jul 30 11:57:19 2010 +0200
+++ b/toolkit/components/console/hudservice/HUDService.jsm	Fri Jul 30 23:27:33 2010 +0300
@@ -194,24 +194,28 @@ HUD_SERVICE.prototype =
    */
   setOnErrorHandler: function HS_setOnErrorHandler(aWindow) {
     var self = this;
     var window = aWindow.wrappedJSObject;
     var console = window.console;
     var origOnerrorFunc = window.onerror;
     window.onerror = function windowOnError(aErrorMsg, aURL, aLineNumber)
     {
-      var lineNum = "";
-      if (aLineNumber) {
-        lineNum = self.getFormatStr("errLine", [aLineNumber]);
+      if (aURL && !(aURL in self.uriRegistry)) {
+        var lineNum = "";
+        if (aLineNumber) {
+          lineNum = self.getFormatStr("errLine", [aLineNumber]);
+        }
+        console.error(aErrorMsg + " @ " + aURL + " " + lineNum);
       }
-      console.error(aErrorMsg + " @ " + aURL + " " + lineNum);
+
       if (origOnerrorFunc) {
         origOnerrorFunc(aErrorMsg, aURL, aLineNumber);
       }
+
       return false;
     };
   },
 
   /**
    * Tell the HUDService that a HeadsUpDisplay can be activated
    * for the window or context that has 'aContextDOMId' node id
    *
diff -r 01877f113dab toolkit/components/console/hudservice/tests/browser/Makefile.in
--- a/toolkit/components/console/hudservice/tests/browser/Makefile.in	Fri Jul 30 11:57:19 2010 +0200
+++ b/toolkit/components/console/hudservice/tests/browser/Makefile.in	Fri Jul 30 23:27:33 2010 +0300
@@ -52,15 +52,17 @@ _BROWSER_TEST_PAGES = \
 	test-network.html \
 	test-mutation.html \
 	testscript.js \
 	test-filter.html \
 	test-observe-http-ajax.html \
 	test-data.json \
 	test-property-provider.html \
 	test-error.html \
+	test-duplicate-error.html \
+	test-duplicate-error.js \
 	$(NULL)
 
 libs:: $(_BROWSER_TEST_FILES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/browser/$(relativesrcdir)
 
 libs:: $(_BROWSER_TEST_PAGES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/browser/$(relativesrcdir)
diff -r 01877f113dab toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js
--- a/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js	Fri Jul 30 11:57:19 2010 +0200
+++ b/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js	Fri Jul 30 23:27:33 2010 +0300
@@ -63,16 +63,18 @@ const TEST_HTTP_URI = "http://example.co
 const TEST_NETWORK_URI = "http://example.com/browser/toolkit/components/console/hudservice/tests/browser/test-network.html";
 
 const TEST_FILTER_URI = "http://example.com/browser/toolkit/components/console/hudservice/tests/browser/test-filter.html";
 
 const TEST_PROPERTY_PROVIDER_URI = "http://example.com/browser/toolkit/components/console/hudservice/tests/browser/test-property-provider.html";
 
 const TEST_ERROR_URI = "http://example.com/browser/toolkit/components/console/hudservice/tests/browser/test-error.html";
 
+const TEST_DUPLICATE_ERROR_URI = "http://example.com/browser/toolkit/components/console/hudservice/tests/browser/test-duplicate-error.html";
+
 function noCacheUriSpec(aUriSpec) {
   return aUriSpec + "?_=" + Date.now();
 }
 
 content.location.href = TEST_URI;
 
 function testRegistries() {
   var displaysIdx = HUDService.displaysIndex();
@@ -618,55 +620,134 @@ function testPageReload() {
 
   content.location.reload();
 }
 
 function testErrorOnPageReload() {
   // see bug 580030: the error handler fails silently after page reload.
   // https://bugzilla.mozilla.org/show_bug.cgi?id=580030
 
+  var consoleObserver = {
+    QueryInterface: XPCOMUtils.generateQI(
+      [Ci.nsIObserver]
+    ),
+
+    observe: function (aMessage)
+    {
+      // we ignore errors we don't care about
+      if (!(aMessage instanceof Ci.nsIScriptError) ||
+        aMessage.category != "content javascript") {
+        return;
+      }
+
+      Services.console.unregisterListener(this);
+
+      var successMsg = "Found the error message after page reload";
+      var errMsg = "Could not get the error message after page reload";
+
+      var display = HUDService.getDisplayByURISpec(content.location.href);
+      var outputNode = display.querySelectorAll(".hud-output-node")[0];
+
+      executeSoon(function () {
+        testLogEntry(outputNode, "fooBazBaz",
+          { success: successMsg, err: errMsg });
+
+        testDuplicateError();
+      });
+    }
+  };
+
   var pageReloaded = false;
-  browser.addEventListener("DOMContentLoaded", function onDOMLoad() {
+  browser.addEventListener("load", function() {
     if (!pageReloaded) {
       pageReloaded = true;
       content.location.reload();
       return;
     }
 
-    browser.removeEventListener("DOMContentLoaded", onDOMLoad, false);
+    browser.removeEventListener("load", arguments.callee, true);
 
-    // dispatch a click event to the button in the test page.
+    // dispatch a click event to the button in the test page and listen for
+    // errors.
+
     var contentDocument = browser.contentDocument.wrappedJSObject;
     var button = contentDocument.getElementsByTagName("button")[0];
     var clickEvent = contentDocument.createEvent("MouseEvents");
     clickEvent.initMouseEvent("click", true, true,
       browser.contentWindow.wrappedJSObject, 0, 0, 0, 0, 0, false, false,
       false, false, 0, null);
 
-    var successMsg = "Found the error message after page reload";
-    var errMsg = "Could not get the error message after page reload";
-
-    var display = HUDService.getDisplayByURISpec(content.location.href);
-    var outputNode = display.querySelectorAll(".hud-output-node")[0];
-
-    button.addEventListener("click", function onClickHandler() {
-      button.removeEventListener("click", onClickHandler, false);
-
-      testLogEntry(outputNode, "fooBazBaz",
-        { success: successMsg, err: errMsg });
-
-      testEnd();
-    }, false);
-
+    Services.console.registerListener(consoleObserver);
     button.dispatchEvent(clickEvent);
-  }, false);
+  }, true);
 
   content.location.href = TEST_ERROR_URI;
 }
 
+function testDuplicateError() {
+  // see bug 582201 - exceptions show twice in WebConsole
+  // https://bugzilla.mozilla.org/show_bug.cgi?id=582201
+
+  var errorsFound = 0;
+
+  var consoleObserver = {
+    QueryInterface: XPCOMUtils.generateQI([Ci.nsIObserver]),
+
+    observe: function (aMessage)
+    {
+      // we ignore errors we don't care about
+      if (!(aMessage instanceof Ci.nsIScriptError) ||
+        aMessage.category != "content javascript") {
+        return;
+      }
+
+      errorsFound++;
+
+      // skip the first error.
+      if (errorsFound != 2) {
+        return;
+      }
+
+      Services.console.unregisterListener(this);
+
+      var display = HUDService.getDisplayByURISpec(content.location.href);
+      var outputNode = display.querySelectorAll(".hud-output-node")[0];
+
+      executeSoon(function () {
+        var text = outputNode.textContent;
+        var pos = text.indexOf("fooDuplicateError1");
+        ok(pos > -1, "found fooDuplicateError1");
+        if (pos > -1) {
+          pos = text.indexOf("fooDuplicateError1", pos+1);
+          ok(pos == -1, "no duplicate for fooDuplicateError1");
+        }
+
+        pos = text.indexOf("fooDuplicateError2");
+        ok(pos > -1, "found fooDuplicateError2");
+        if (pos > -1) {
+          pos = text.indexOf("fooDuplicateError2", pos+1);
+          ok(pos == -1, "no duplicate for fooDuplicateError2");
+        }
+
+        pos = text.indexOf("test-duplicate-error.html");
+        ok(pos > -1, "found test-duplicate-error.html");
+
+        pos = text.indexOf("test-duplicate-error.js");
+        ok(pos > -1, "found test-duplicate-error.js");
+
+        text = null;
+        testEnd();
+      });
+    }
+  };
+
+  Services.console.registerListener(consoleObserver);
+  content.location = TEST_DUPLICATE_ERROR_URI;
+}
+
 function testEnd() {
   // testUnregister();
   executeSoon(function () {
     HUDService.deactivateHUDForContext(tab);
     HUDService.shutdown();
   });
   finish();
 }
diff -r 01877f113dab toolkit/components/console/hudservice/tests/browser/test-duplicate-error.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/toolkit/components/console/hudservice/tests/browser/test-duplicate-error.html	Fri Jul 30 23:27:33 2010 +0300
@@ -0,0 +1,15 @@
+<!DOCTYPE HTML>
+<html dir="ltr" xml:lang="en-US" lang="en-US">
+  <head>
+    <title>Console duplicate error test</title>
+  </head>
+  <body>
+    <h1>Heads Up Display - duplicate error test</h1>
+
+    <script type="text/javascript"><!--
+      fooDuplicateError1.bar();
+    // --></script>
+    <script type="text/javascript" src="test-duplicate-error.js"></script>
+  </body>
+</html>
+
diff -r 01877f113dab toolkit/components/console/hudservice/tests/browser/test-duplicate-error.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/toolkit/components/console/hudservice/tests/browser/test-duplicate-error.js	Fri Jul 30 23:27:33 2010 +0300
@@ -0,0 +1,3 @@
+
+fooDuplicateError2.baz();
+
