diff -r 9d2e478fd35b toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js
--- a/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js	Tue Jul 13 23:15:43 2010 +0300
+++ b/toolkit/components/console/hudservice/tests/browser/browser_HUDServiceTestsAll.js	Fri Jul 16 15:49:23 2010 +0300
@@ -431,16 +431,52 @@ function testIteration() {
 }
 
 function testHUDGetters()
 {
   var HUD = HUDService.hudWeakReferences[hudId].get();
   var jsterm = HUD.jsterm;
   var klass = jsterm.inputNode.getAttribute("class");
   ok(klass == "jsterm-input-node", "We have the input node.");
+
+  var hudconsole = HUD.console;
+  is(typeof hudconsole, "object", "HUD.console is an object");
+  is(hudconsole.hudId, hudId, "HUD.console.hudId is correct");
+  is(typeof hudconsole.log, "function", "HUD.console.log is a function");
+}
+
+function testPageReload() {
+  // see bug 578437 - The HUD console fails to re-attach the window.console 
+  // object after page reload.
+
+  browser.addEventListener("DOMContentLoaded", function onDOMLoad () {
+    browser.removeEventListener("DOMContentLoaded", onDOMLoad, false);
+
+    var console = browser.contentWindow.wrappedJSObject.console;
+
+    is(typeof console, "object", "window.console is an object, after page reload");
+    is(typeof console.log, "function", "console.log is a function");
+    is(typeof console.info, "function", "console.info is a function");
+    is(typeof console.warn, "function", "console.warn is a function");
+    is(typeof console.error, "function", "console.error is a function");
+    is(typeof console.exception, "function", "console.exception is a function");
+
+    testEnd();
+  }, false);
+
+  content.location.reload();
+}
+
+function testEnd() {
+  // testUnregister();
+  executeSoon(function () {
+    HUDService.deactivateHUDForContext(tab);
+    HUDService.shutdown();
+  });
+  finish();
 }
 
 let tab, browser, hudId, hud, filterBox, outputNode, cs;
 
 let win = gBrowser.selectedBrowser;
 tab = gBrowser.selectedTab;
 browser = gBrowser.getBrowserForTab(tab);
 
@@ -482,17 +518,13 @@ function test() {
       // ConsoleStorageTests
       testCreateDisplay();
       testRecordEntry();
       testRecordManyEntries();
       testIteration();
       testCompletion();
       testPropertyProvider();
 
-      // testUnregister();
-      executeSoon(function () {
-        HUDService.deactivateHUDForContext(tab);
-        HUDService.shutdown();
-      });
-      finish();
+      testPageReload();
+
     });
   }, false);
 }
