diff --git a/browser/base/content/browser-appmenu.inc b/browser/base/content/browser-appmenu.inc
--- a/browser/base/content/browser-appmenu.inc
+++ b/browser/base/content/browser-appmenu.inc
@@ -182,16 +182,20 @@
                     oncommand="HUDConsoleUI.toggleHUD();"
                     key="key_webConsole"/>
           <menuitem id="appmenu_pageInspect"
                     hidden="true"
                     label="&inspectMenu.label;"
                     type="checkbox"
                     command="Tools:Inspect"
                     key="key_inspect"/>
+          <menuitem id="appmenu_workspace"
+                    label="&workspace.label;"
+                    key="key_workspace"
+                    command="Tools:Workspace"/>
           <menuitem id="appmenu_pageSource"
                     label="&viewPageSourceCmd.label;"
                     command="View:PageSource"
                     key="key_viewSource"/>
           <menuitem id="appmenu_errorConsole"
                     hidden="true"
                     label="&errorConsoleCmd.label;"
                     key="key_errorConsole"
diff --git a/browser/base/content/browser-menubar.inc b/browser/base/content/browser-menubar.inc
--- a/browser/base/content/browser-menubar.inc
+++ b/browser/base/content/browser-menubar.inc
@@ -545,16 +545,20 @@
                         accesskey="&errorConsoleCmd.accesskey;"
                         key="key_errorConsole"
                         oncommand="toJavaScriptConsole();"/>
               <menuitem id="webConsole"
                         label="&webConsoleCmd.label;"
                         accesskey="&webConsoleCmd.accesskey;"
                         key="key_webConsole"
                         oncommand="HUDConsoleUI.toggleHUD();"/>
+              <menuitem id="menu_workspace"
+                        label="&workspace.label;"
+                        key="key_workspace"
+                        command="Tools:Workspace"/>
               <menuitem id="menu_pageInfo"
                         accesskey="&pageInfoCmd.accesskey;"
                         label="&pageInfoCmd.label;"
 #ifndef XP_WIN
                         key="key_viewInfo"
 #endif
                         command="View:PageInfo"/>
               <menuseparator id="sanitizeSeparator"/>
diff --git a/browser/base/content/browser-sets.inc b/browser/base/content/browser-sets.inc
--- a/browser/base/content/browser-sets.inc
+++ b/browser/base/content/browser-sets.inc
@@ -120,16 +120,17 @@
     <command id="cmd_fullZoomEnlarge" oncommand="FullZoom.enlarge()"/>
     <command id="cmd_fullZoomReset"   oncommand="FullZoom.reset()"/>
     <command id="cmd_fullZoomToggle"  oncommand="ZoomManager.toggleZoom();"/>
     <command id="Browser:OpenLocation" oncommand="openLocation();"/>
 
     <command id="Tools:Search" oncommand="BrowserSearch.webSearch();"/>
     <command id="Tools:Downloads" oncommand="BrowserDownloadsUI();"/>
     <command id="Tools:Inspect" oncommand="InspectorUI.toggleInspectorUI();" disabled="true"/>
+    <command id="Tools:Workspace" oncommand="Workspace.openWorkspace();"/>
     <command id="Tools:Addons" oncommand="BrowserOpenAddonsMgr();"/>
     <command id="Tools:Sanitize"
      oncommand="Cc['@mozilla.org/browser/browserglue;1'].getService(Ci.nsIBrowserGlue).sanitize(window);"/>
     <command id="Tools:PrivateBrowsing" oncommand="gPrivateBrowsingUI.toggleMode();"/>
     <command id="History:UndoCloseTab" oncommand="undoCloseTab();"/>
     <command id="History:UndoCloseWindow" oncommand="undoCloseWindow();"/>
     <command id="Browser:ToggleAddonBar" oncommand="toggleAddonBar();"/>
   </commandset>
@@ -236,16 +237,18 @@
     <key id="key_openDownloads" key="&downloadsUnix.commandkey;" command="Tools:Downloads" modifiers="accel,shift"/>
 #else
     <key id="key_openDownloads" key="&downloads.commandkey;" command="Tools:Downloads" modifiers="accel"/>
 #endif
     <key id="key_openAddons" key="&addons.commandkey;" command="Tools:Addons" modifiers="accel,shift"/>
     <key id="key_errorConsole" key="&errorConsoleCmd.commandkey;" oncommand="toJavaScriptConsole();" modifiers="accel,shift" disabled="true"/>
     <key id="key_webConsole" key="&webConsoleCmd.commandkey;" oncommand="HUDConsoleUI.toggleHUD();" modifiers="accel,shift"/>
     <key id="key_inspect" key="&inspectMenu.commandkey;" command="Tools:Inspect" modifiers="accel,shift"/>
+    <key id="key_workspace" keycode="&workspace.keycode;"
+         keytext="&workspace.keytext;" command="Tools:Workspace"/>
     <key id="openFileKb" key="&openFileCmd.commandkey;" command="Browser:OpenFile"  modifiers="accel"/>
     <key id="key_savePage" key="&savePageCmd.commandkey;" command="Browser:SavePage" modifiers="accel"/>
     <key id="printKb" key="&printCmd.commandkey;" command="cmd_print"  modifiers="accel"/>
     <key id="key_close" key="&closeCmd.key;" command="cmd_close" modifiers="accel"/>
     <key id="key_closeWindow" key="&closeCmd.key;" command="cmd_closeWindow" modifiers="accel,shift"/>
     <key id="key_undo"
          key="&undoCmd.key;"
          modifiers="accel"/>
diff --git a/browser/base/content/browser.js b/browser/base/content/browser.js
--- a/browser/base/content/browser.js
+++ b/browser/base/content/browser.js
@@ -8603,16 +8603,27 @@ let AddonsMgrListener = {
   onDisabled: function(aAddon) this.onUninstalled(),
 };
 
 function toggleAddonBar() {
   let addonBar = document.getElementById("addon-bar");
   setToolbarVisibility(addonBar, addonBar.collapsed);
 }
 
+let Workspace = {
+  openWorkspace: function WS_openWorkspace() {
+    const WORKSPACE_WINDOW_URL = "chrome://browser/content/workspace.xul";
+    const WORKSPACE_WINDOW_FEATURES = "chrome,titlebar,toolbar,centerscreen,resizable,dialog=no";
+
+    Services.ww.openWindow(null, WORKSPACE_WINDOW_URL, "_blank",
+                           WORKSPACE_WINDOW_FEATURES, null);
+  },
+};
+
+
 XPCOMUtils.defineLazyGetter(window, "gShowPageResizers", function () {
 #ifdef XP_WIN
   // Only show resizers on Windows 2000 and XP
   let sysInfo = Components.classes["@mozilla.org/system-info;1"]
                           .getService(Components.interfaces.nsIPropertyBag2);
   return parseFloat(sysInfo.getProperty("version")) < 6;
 #else
   return false;
diff --git a/browser/base/content/workspace.js b/browser/base/content/workspace.js
new file mode 100644
--- /dev/null
+++ b/browser/base/content/workspace.js
@@ -0,0 +1,306 @@
+#ifdef 0
+/* vim:set ts=2 sw=2 sts=2 et:
+ * ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is Workspace.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Corporation.
+ * Portions created by the Initial Developer are Copyright (C) 2011
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *   Rob Campbell <robcee@mozilla.com> (original author)
+ *   Erik Vold <erikvvold@gmail.com>
+ *   David Dahl <ddahl@mozilla.com>
+ *   Mihai Sucan <mihai.sucan@gmail.com>
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK *****/
+#endif
+
+const Cc = Components.classes;
+const Ci = Components.interfaces;
+const Cu = Components.utils;
+
+Cu.import("resource://gre/modules/XPCOMUtils.jsm");
+Cu.import("resource://gre/modules/Services.jsm");
+Cu.import("resource:///modules/PropertyPanel.jsm");
+Cu.import("resource://gre/modules/HUDService.jsm");
+
+const WORKSPACE_CONTEXT_CONTENT = 1;
+const WORKSPACE_CONTEXT_CHROME = 2;
+const WORKSPACE_WINDOW_URL = "chrome://browser/content/workspace.xul";
+const WORKSPACE_WINDOW_FEATURES = "chrome,titlebar,toolbar,centerscreen,resizable,dialog=no";
+
+Workspace = {
+  win: null,
+  executionContext: WORKSPACE_CONTEXT_CONTENT,
+
+  get textbox() document.getElementById("workspace-textbox"),
+  get statusbar() document.getElementById("workspace-statusbar"),
+  get statusbarStatus() document.getElementById("workspace-status"),
+
+  get selectedText() {
+    let text = this.textbox.value;
+    let selectionStart = this.textbox.selectionStart;
+    let selectionEnd = this.textbox.selectionEnd;
+    if (selectionStart != selectionEnd)
+      return text.substring(selectionStart, selectionEnd);
+    return "";
+  },
+
+  get browserWindow() Services.wm.getMostRecentWindow("navigator:browser"),
+
+  get gBrowser() {
+    let recentWin = this.browserWindow;
+    return (recentWin) ? recentWin.gBrowser : null;
+  },
+
+  get sandbox() {
+    // need to cache sandboxes if currentBrowser == previousBrowser
+    let contentWindow = this.gBrowser.selectedBrowser.contentWindow;
+    let sandbox = new Cu.Sandbox(contentWindow,
+      { sandboxPrototype: contentWindow, wantXrays: false });
+    return sandbox;
+  },
+
+  get chromeSandbox() {
+    var win = HUDService.getChromeWindowFromContentWindow(this.browserWindow);
+
+    let sandbox = new Cu.Sandbox(win,
+                                 { sandboxPrototype: win, wantXrays: false });
+
+    return sandbox;
+  },
+
+  hasSelection: function WS_hasSelection() {
+    return !!this.textbox.selectedText;
+  },
+
+  hasClipboard: function WS_hasClipboard() {
+    return false; //tbd
+  },
+
+  updateEditUIVisibility: function WS_updateEditUIVisibility() {
+    if (this.hasSelection) {
+      document.getElementById("ws-menu-cut").removeAttribute("disabled");
+      document.getElementById("ws-menu-copy").removeAttribute("disabled");
+    } else {
+      document.getElementById("ws-menu-cut").setAttribute("disabled", true);
+      document.getElementById("ws-menu-copy").setAttribute("disabled", true);
+    }
+    document.getElementById("ws-menu-paste").setAttribute("disabled", !this.hasClipboard());
+  },
+
+  deselect: function WS_deselect() {
+    this.textbox.selectionEnd = this.textbox.selectionStart;
+    return this;
+  },
+
+  selectRange: function WS_selectRange(aStart, aEnd) {
+    this.textbox.selectionStart = aStart;
+    this.textbox.selectionEnd = aEnd;
+  },
+
+  evalInSandbox: function WS_evalInSandbox(aString) {
+    return Cu.evalInSandbox(aString, this.sandbox, "1.8", "Workspace", 1);
+  },
+
+  evalInChromeSandbox: function WS_evalInChromeSandbox(aString) {
+    return Cu.evalInSandbox(aString, this.chromeSandbox, "1.8", "Workspace", 1);
+  },
+
+  evalForContext: function WS_evaluateForContext(aString) {
+    if (this.executionContext == WORKSPACE_CONTEXT_CONTENT)
+      return this.evalInSandbox(aString);
+
+    // chrome
+    return this.evalInChromeSandbox(aString);
+  },
+
+  execute: function WS_execute(aEvent) {
+    let selection = this.selectedText || this.textbox.value;
+    this.evalForContext(selection);
+    this.deselect();
+  },
+
+  inspect: function WS_inspect(aEvent) {
+    let selection = this.selectedText || this.textbox.value;
+    let result = this.evalForContext(selection);
+
+    if (result)
+      this.openPropertyPanel(selection, result, this);
+
+    this.deselect();
+  },
+
+  print: function WS_print(aEvent) {
+    let selection = this.selectedText || this.textbox.value;
+    let selectionStart = this.textbox.selectionStart;
+    let selectionEnd = this.textbox.selectionEnd;
+    if (selectionStart == selectionEnd)
+      selectionEnd = this.textbox.value.length;
+    let result = this.evalForContext(selection);
+    if (!result) return;
+    let firstPiece = this.textbox.value.slice(0, selectionEnd);
+    let lastPiece = this.textbox.value.slice(selectionEnd + 1, this.textbox.value.length);
+    this.textbox.value = firstPiece + "\n " + result.toString() + "\n" + lastPiece;
+    this.selectRange(this.textbox.selectionEnd + 2,
+      this.textbox.selectionStart + result.length);
+  },
+
+  openPropertyPanel: function WS_openPropertyPanel(aEvalString, aOutputObject,
+                                                  aAnchor)
+  {
+    let self = this;
+    let propPanel;
+    // The property panel has two buttons:
+    // 1. `Update`: reexecutes the string executed on the command line. The
+    //    result will be inspected by this panel.
+    // 2. `Close`: destroys the panel.
+    let buttons = [];
+
+    // If there is a evalString passed to this function, then add a `Update`
+    // button to the panel so that the evalString can be reexecuted to update
+    // the content of the panel.
+    if (aEvalString !== null) {
+      buttons.push({
+        label: this.strings.
+               GetStringFromName("propertyPanel.updateButton.label"),
+        accesskey: this.strings.
+                   GetStringFromName("propertyPanel.updateButton.accesskey"),
+        oncommand: function () {
+          try {
+            let result = self.evalForContext(aEvalString);
+
+            if (result !== undefined)
+              propPanel.treeView.data = result;
+          } catch (ex) {
+          }
+        }
+      });
+    }
+
+    let doc = this.browserWindow.document;
+    let parent = doc.getElementById("mainPopupSet");
+    let title = aOutputObject.toString();
+    propPanel = new PropertyPanel(parent, doc, title, aOutputObject, buttons);
+
+    let panel = propPanel.panel;
+    panel.openPopup(aAnchor, "after_pointer", 0, 0, false, false);
+    panel.sizeTo(200, 400);
+
+    return propPanel;
+  },
+
+  // Menu Operations
+
+  openWorkspace: function WS_openWorkspace() {
+    Services.ww.openWindow(null, WORKSPACE_WINDOW_URL, "_blank",
+                           WORKSPACE_WINDOW_FEATURES, null);
+  },
+
+  exportToFile: function WS_exportToFile(aFile) {
+    if (aFile.exists() &&
+        !window.confirm(this.strings.
+                        GetStringFromName("export.fileOverwriteConfirmation")))
+      return;
+
+    let fs = Cc["@mozilla.org/network/file-output-stream;1"].
+              createInstance(Ci.nsIFileOutputStream);
+    let modeFlags = 0x02 | 0x08 | 0x20;
+    fs.init(aFile, modeFlags, 0644, 0);
+    fs.write(this.textbox.value, this.textbox.value.length);
+    fs.close();
+  },
+
+  importFromFile: function WS_importFromFile(aFile) {
+    let fs = Cc["@mozilla.org/network/file-input-stream;1"].
+                createInstance(Ci.nsIFileInputStream);
+    fs.init(aFile, -1, -1, 0);
+    let sis = Cc["@mozilla.org/scriptableinputstream;1"].
+                 createInstance(Ci.nsIScriptableInputStream);
+    sis.init(fs);
+    this.textbox.value = sis.read(sis.available());
+    sis.close();
+    fs.close();
+  },
+
+  openFile: function WS_openFile() {
+    let fp = Cc["@mozilla.org/filepicker;1"].createInstance(Ci.nsIFilePicker);
+    fp.init(window, "Open File",
+            Ci.nsIFilePicker.modeOpen);
+    fp.defaultString = "";
+    if (fp.show() != Ci.nsIFilePicker.returnCancel) {
+      document.title = this.filename = fp.file.path;
+      this.importFromFile(fp.file);
+    }
+  },
+
+  saveFile: function WS_saveFile() {
+    if (!this.filename)
+      return this.saveFileAs();
+    let file = Cc["@mozilla.org/file/local;1"].createInstance(Ci.nsILocalFile);
+    file.initWithPath(this.filename);
+    this.exportToFile(file);
+  },
+
+  saveFileAs: function WS_saveFileAs() {
+    let fp = Cc["@mozilla.org/filepicker;1"].createInstance(Ci.nsIFilePicker);
+    fp.init(window, "Save File As",
+            Ci.nsIFilePicker.modeSave);
+    fp.defaultString = "workspace.js";
+    if (fp.show() != Ci.nsIFilePicker.returnCancel) {
+      document.title = this.filename = fp.file.path;
+      this.exportToFile(fp.file);
+    }
+  },
+
+  openErrorConsole: function WS_openErrorConsole() {
+    this.browserWindow.toJavaScriptConsole();
+  },
+
+  setContentContext: function WS_setContentContext() {
+    let content = document.getElementById("ws-menu-content");
+    document.getElementById("ws-menu-chrome").removeAttribute("checked");
+    content.setAttribute("checked", true);
+    this.statusbarStatus.label = content.getAttribute("label");
+    this.executionContext = WORKSPACE_CONTEXT_CONTENT;
+  },
+
+  setChromeContext: function WS_setChromeContext() {
+    let chrome = document.getElementById("ws-menu-chrome");
+    document.getElementById("ws-menu-content").removeAttribute("checked");
+    chrome.setAttribute("checked", true);
+    this.statusbarStatus.label = chrome.getAttribute("label");
+    this.executionContext = WORKSPACE_CONTEXT_CHROME;
+  }
+};
+
+XPCOMUtils.defineLazyGetter(Workspace, "strings", function () {
+  return Services.strings.createBundle("chrome://browser/locale/workspace.properties");
+});
+
diff --git a/browser/base/content/workspace.xul b/browser/base/content/workspace.xul
new file mode 100644
--- /dev/null
+++ b/browser/base/content/workspace.xul
@@ -0,0 +1,308 @@
+<?xml version="1.0"?>
+#ifdef 0
+<!-- ***** BEGIN LICENSE BLOCK *****
+   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
+   -
+   - The contents of this file are subject to the Mozilla Public License Version
+   - 1.1 (the "License"); you may not use this file except in compliance with
+   - the License. You may obtain a copy of the License at
+   - http://www.mozilla.org/MPL/
+   -
+   - Software distributed under the License is distributed on an "AS IS" basis,
+   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+   - for the specific language governing rights and limitations under the
+   - License.
+   -
+   - The Original Code is Workspace.
+   -
+   - The Initial Developer of the Original Code is
+   - Mozilla Corporation.
+   - Portions created by the Initial Developer are Copyright (C) 2011
+   - the Initial Developer. All Rights Reserved.
+   -
+   - Contributor(s):
+   -   Rob Campbell <robcee@mozilla.com> (original author)
+   -   Mihai Sucan <mihai.sucan@gmail.com>
+   -
+   - Alternatively, the contents of this file may be used under the terms of
+   - either the GNU General Public License Version 2 or later (the "GPL"), or
+   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+   - in which case the provisions of the GPL or the LGPL are applicable instead
+   - of those above. If you wish to allow use of your version of this file only
+   - under the terms of either the GPL or the LGPL, and not to allow others to
+   - use your version of this file under the terms of the MPL, indicate your
+   - decision by deleting the provisions above and replace them with the notice
+   - and other provisions required by the GPL or the LGPL. If you do not delete
+   - the provisions above, a recipient may use your version of this file under
+   - the terms of any one of the MPL, the GPL or the LGPL.
+   -
+   - ***** END LICENSE BLOCK ***** -->
+#endif
+<!DOCTYPE window [
+<!ENTITY % browserDTD SYSTEM "chrome://browser/locale/browser.dtd" >
+ %browserDTD;
+]>
+<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>
+<?xul-overlay href="chrome://global/content/editMenuOverlay.xul"?>
+
+<window id="main-window"
+        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
+        title="&workspace.title;"
+        windowtype="devtools:workspace"
+        screenX="4" screenY="4"
+        width="640" height="480"
+        persist="screenX screenY width height sizemode">
+
+<script type="application/javascript" src="chrome://global/content/globalOverlay.js"/>
+<script type="application/javascript" src="chrome://browser/content/workspace.js"/>
+
+<commandset id="editMenuCommands"/>
+
+<commandset id="ws-commandset">
+  <command id="ws-cmd-newWindow" oncommand="Workspace.openWorkspace();"/>
+  <command id="ws-cmd-openFile" oncommand="Workspace.openFile();"/>
+  <command id="ws-cmd-save" oncommand="Workspace.saveFile();"/>
+  <command id="ws-cmd-saveas" oncommand="Workspace.saveFileAs();"/>
+  <command id="ws-cmd-printFile" oncommand="Workspace.printFile();" disabled="true"/>
+  <command id="ws-cmd-close" oncommand="window.close();"/>
+  <command id="ws-cmd-execute" oncommand="Workspace.execute();"/>
+  <command id="ws-cmd-inspect" oncommand="Workspace.inspect();"/>
+  <command id="ws-cmd-print" oncommand="Workspace.print();"/>
+  <command id="ws-cmd-contentContext" oncommand="Workspace.setContentContext();"/>
+  <command id="ws-cmd-chromeContext" oncommand="Workspace.setChromeContext();"/>
+  <command id="ws-cmd-errorConsole" oncommand="Workspace.openErrorConsole();"/>
+</commandset>
+
+<keyset id="ws-keyset">
+  <key id="ws-key-window"
+       key="&workspace.newwindow.key;"
+       command="ws-cmd-newWindow"
+       modifiers="accel"/>
+  <key id="ws-key-open"
+       key="&openFileCmd.commandkey;"
+       command="ws-cmd-openFile"
+       modifiers="accel"/>
+  <key id="ws-key-save"
+       key="&workspace.savefile.key;"
+       command="ws-cmd-save"
+       modifiers="accel"/>
+  <key id="ws-key-close"
+       key="&closeCmd.key;"
+       command="ws-cmd-close"
+       modifiers="accel"/>
+  <key id="ws-key-printFile"
+       key="&printCmd.commandkey;"
+       command="ws-cmd-printFile"
+       modifiers="accel"/>
+  <key id="key_cut"
+       key="&cutCmd.key;"
+       modifiers="accel"/>
+  <key id="key_copy"
+       key="&copyCmd.key;"
+       modifiers="accel"/>
+  <key id="key_paste"
+       key="&pasteCmd.key;"
+       modifiers="accel"/>
+  <key id="key_selectAll" key="&selectAllCmd.key;" modifiers="accel"/>
+  <key id="key_undo"
+       key="&undoCmd.key;"
+       modifiers="accel"/>
+  <key id="key_redo" key="&undoCmd.key;" modifiers="accel,shift"/>
+  <key id="ws-key-execute"
+       key="&workspace.execute.key;"
+       command="ws-cmd-execute"
+       modifiers="accel"/>
+  <key id="ws-key-inspect"
+       key="&workspace.inspect.key;"
+       command="ws-cmd-inspect"
+       modifiers="accel"/>
+  <key id="ws-key-print"
+       key="&workspace.print.key;"
+       command="ws-cmd-print"
+       modifiers="accel"/>
+  <key id="ws-key-errorConsole"
+       key="&errorConsoleCmd.commandkey;"
+       command="ws-cmd-errorConsole"
+       modifiers="accel,shift"/>
+</keyset>
+
+
+<menubar id="ws-menubar">
+  <menu id="ws-file-menu" label="&fileMenu.label;"
+        accesskey="&fileMenu.accesskey;">
+    <menupopup id="ws-menu-filepopup">
+      <menuitem id="ws-menu-newworkspace"
+                label="&workspace.newwindow.label;"
+                accesskey="&workspace.newwindow.accesskey;"
+                key="ws-key-window"
+                command="ws-cmd-newWindow"/>
+      <menuseparator/>
+      <menuitem id="ws-menu-open"
+                label="&openFileCmd.label;"
+                command="ws-cmd-openFile"
+                key="ws-key-open"
+                accesskey="&openFileCmd.accesskey;"/>
+      <menuitem id="ws-menu-save"
+                label="&workspace.savefile.label;"
+                accesskey="&workspace.savefile.accesskey;"
+                key="ws-key-save"
+                command="ws-cmd-save"/>
+      <menuitem id="ws-menu-saveas"
+                label="&workspace.saveas.label;"
+                accesskey="&workspace.saveas.accesskey;"
+                command="ws-cmd-saveas"/>
+      <menuseparator/>
+      <menuitem id="ws-menu-print"
+                label="&printCmd.label;"
+                accesskey="&printCmd.accesskey;"
+                command="ws-cmd-printFile"/>
+      <menuseparator/>
+      <menuitem id="ws-menu-close"
+                label="&closeCmd.label;"
+                key="ws-key-close"
+                accesskey="&closeCmd.accesskey;"
+                command="ws-cmd-close"/>
+    </menupopup>
+  </menu>
+
+  <menu id="ws-edit-menu" label="&editMenu.label;"
+        accesskey="&editMenu.accesskey;">
+    <menupopup id="ws-menu_editpopup"
+               onpopupshowing="Workspace.updateEditUIVisibility();"
+               onpopuphidden="Workspace.updateEditUIVisibility();">
+      <menuitem id="ws-menu_undo"
+                label="&undoCmd.label;"
+                key="key_undo"
+                accesskey="&undoCmd.accesskey;"
+                disabled="true"
+                oncommand="cmd_undo"/>
+      <menuitem id="ws-menu-redo"
+                label="&redoCmd.label;"
+                key="key_redo"
+                disabled="true"
+                accesskey="&redoCmd.accesskey;"
+                command="cmd_redo"/>
+      <menuseparator/>
+      <menuitem id="ws-menu-cut"
+                label="&cutCmd.label;"
+                key="key_cut"
+                accesskey="&cutCmd.accesskey;"
+                command="cmd_cut"/>
+      <menuitem id="ws-menu-copy"
+                label="&copyCmd.label;"
+                key="key_copy"
+                accesskey="&copyCmd.accesskey;"
+                command="cmd_copy"/>
+      <menuitem id="ws-menu-paste"
+                label="&pasteCmd.label;"
+                key="key_paste"
+                accesskey="&pasteCmd.accesskey;"
+                command="cmd_paste"/>
+      <menuseparator/>
+      <menuitem id="ws-menu-selectAll"
+                label="&selectAllCmd.label;"
+                key="key_selectAll"
+                accesskey="&selectAllCmd.accesskey;"
+                command="cmd_selectAll"/>
+      <menuseparator/>
+      <menuitem id="ws-menu-find"
+                label="&findOnCmd.label;"
+                accesskey="&findOnCmd.accesskey;"
+                key="key_find"
+                disabled="true"
+                command="cmd_find"/>
+      <menuitem id="ws-menu-findAgain"
+                label="&findAgainCmd.label;"
+                accesskey="&findAgainCmd.accesskey;"
+                key="key_findAgain"
+                disabled="true"
+                command="cmd_findAgain"/>
+      <menuseparator id="ws-execute-separator"/>
+      <menuitem id="ws-text-execute"
+                label="&workspace.execute.label;"
+                accesskey="&workspace.execute.accesskey;"
+                key="ws-key-execute"
+                command="ws-cmd-execute"/>
+      <menuitem id="ws-text-inspect"
+                label="&workspace.inspect.label;"
+                accesskey="&workspace.inspect.accesskey;"
+                key="ws-key-inspect"
+                command="ws-cmd-inspect"/>
+      <menuitem id="ws-text-print"
+                label="&workspace.print.label;"
+                accesskey="&workspace.print.accesskey;"
+                key="ws-key-print"
+                command="ws-cmd-print"/>
+    </menupopup>
+  </menu>
+
+  <menu id="ws-context-menu"
+        label="&workspace.context.label;"
+        accesskey="&workspace.context.accesskey;">
+    <menupopup id="ws-menu-context">
+      <menuitem id="ws-menu-content"
+                label="&workspace.content.label;"
+                accesskey="&workspace.content.accesskey;"
+                command="ws-cmd-contentContext"
+                checked="true"
+                type="radio"/>
+      <menuitem id="ws-menu-chrome"
+                command="ws-cmd-chromeContext"
+                label="&workspace.chrome.label;"
+                accesskey="&workspace.chrome.accesskey;"
+                type="radio"/>
+    </menupopup>
+  </menu>
+
+  <menu id="ws-tools-menu"
+        label="&toolsMenu.label;"
+        accesskey="&toolsMenu.accesskey;">
+    <menupopup id="ws-menu-tools">
+      <menuitem id="ws-menu-errorConsole"
+                label="&errorConsoleCmd.label;"
+                accesskey="&errorConsoleCmd.accesskey;"
+                key="ws-key-errorConsole"
+                command="ws-cmd-errorConsole"/>
+    </menupopup>
+  </menu>
+</menubar>
+
+<popupset id="workspace-popups">
+  <menupopup id="workspace-text-popup">
+    <menuitem id="menu_cut"/>
+    <menuitem id="menu_copy"/>
+    <menuitem id="menu_paste"/>
+    <menuitem id="menu_delete"/>
+    <menuseparator/>
+    <menuitem id="menu_selectAll"/>
+    <menuseparator/>
+    <menuitem id="ws-text-execute"
+              label="&workspace.execute.label;"
+              accesskey="&workspace.execute.accesskey;"
+              key="ws-key-execute"
+              command="ws-cmd-execute"/>
+    <menuitem id="ws-text-inspect"
+              label="&workspace.inspect.label;"
+              accesskey="&workspace.inspect.accesskey;"
+              key="ws-key-inspect"
+              command="ws-cmd-inspect"/>
+    <menuitem id="ws-text-print"
+              label="&workspace.print.label;"
+              accesskey="&workspace.print.accesskey;"
+              key="ws-key-print"
+              command="ws-cmd-print"/>
+  </menupopup>
+</popupset>
+
+<textbox id="workspace-textbox"
+         multiline="true"
+         flex="1"
+         context="workspace-text-popup"
+         placeholder="&workspace.placeholder;" />
+<statusbar id="workspace-statusbar" align="end">
+  <statusbarpanel id="workspace-status"
+                  label="&workspace.content.label;"
+                  class="statusbarpanel-iconic-text"/>
+  <spacer flex="1"/>
+</statusbar>
+</window>
diff --git a/browser/base/jar.mn b/browser/base/jar.mn
--- a/browser/base/jar.mn
+++ b/browser/base/jar.mn
@@ -25,16 +25,18 @@ browser.jar:
         content/browser/aboutRobots-icon.png          (content/aboutRobots-icon.png)
         content/browser/aboutRobots-widget-left.png   (content/aboutRobots-widget-left.png)
 *       content/browser/browser.css                   (content/browser.css)
 *       content/browser/browser.js                    (content/browser.js)
 *       content/browser/browser.xul                   (content/browser.xul)
 *       content/browser/browser-tabPreviews.xml       (content/browser-tabPreviews.xml)
 *       content/browser/fullscreen-video.xhtml        (content/fullscreen-video.xhtml)
 *       content/browser/inspector.html                (content/inspector.html)
+*       content/browser/workspace.xul                 (content/workspace.xul)
+*       content/browser/workspace.js                  (content/workspace.js)
 *       content/browser/pageinfo/pageInfo.xul         (content/pageinfo/pageInfo.xul)
 *       content/browser/pageinfo/pageInfo.js          (content/pageinfo/pageInfo.js)
 *       content/browser/pageinfo/pageInfo.css         (content/pageinfo/pageInfo.css)
 *       content/browser/pageinfo/pageInfo.xml         (content/pageinfo/pageInfo.xml)
 *       content/browser/pageinfo/feeds.js             (content/pageinfo/feeds.js)
 *       content/browser/pageinfo/feeds.xml            (content/pageinfo/feeds.xml)
 *       content/browser/pageinfo/permissions.js       (content/pageinfo/permissions.js)
 *       content/browser/pageinfo/security.js          (content/pageinfo/security.js)
diff --git a/browser/locales/en-US/chrome/browser/browser.dtd b/browser/locales/en-US/chrome/browser/browser.dtd
--- a/browser/locales/en-US/chrome/browser/browser.dtd
+++ b/browser/locales/en-US/chrome/browser/browser.dtd
@@ -186,16 +186,45 @@ can reach it easily. -->
 <!ENTITY webConsoleCmd.label          "Web Console">
 <!ENTITY webConsoleCmd.accesskey      "W">
 <!ENTITY webConsoleCmd.commandkey     "k">
 
 <!ENTITY inspectMenu.label            "Inspect">
 <!ENTITY inspectMenu.accesskey        "T">
 <!ENTITY inspectMenu.commandkey       "I">
 
+<!ENTITY workspace.title               "Workspace">
+<!ENTITY workspace.label               "Workspace">
+<!ENTITY workspace.keycode             "VK_F4">
+<!ENTITY workspace.keytext             "F4">
+<!ENTITY workspace.newwindow.label     "New Window">
+<!ENTITY workspace.newwindow.accesskey "N">
+<!ENTITY workspace.newwindow.key       "n">
+<!ENTITY workspace.savefile.label      "Save">
+<!ENTITY workspace.savefile.accesskey  "S">
+<!ENTITY workspace.savefile.key        "s">
+<!ENTITY workspace.saveas.label        "Save As…">
+<!ENTITY workspace.saveas.accesskey    "A">
+<!ENTITY workspace.execute.label       "Execute">
+<!ENTITY workspace.execute.accesskey   "E">
+<!ENTITY workspace.execute.key         "e">
+<!ENTITY workspace.inspect.label       "Inspect">
+<!ENTITY workspace.inspect.accesskey   "I">
+<!ENTITY workspace.inspect.key         "i">
+<!ENTITY workspace.print.label         "Print">
+<!ENTITY workspace.print.accesskey     "p">
+<!ENTITY workspace.print.key           "r">
+<!ENTITY workspace.context.label       "Context">
+<!ENTITY workspace.context.accesskey   "C">
+<!ENTITY workspace.chrome.label        "Chrome">
+<!ENTITY workspace.chrome.accesskey    "H">
+<!ENTITY workspace.content.label       "Content">
+<!ENTITY workspace.content.accesskey   "C">
+<!ENTITY workspace.placeholder         "// Enter some JavaScript, select it, right click and choose your weapon.">
+
 <!ENTITY inspectPanelTitle.label      "HTML">
 <!ENTITY inspectButton.label          "Inspect">
 <!ENTITY inspectButton.accesskey      "I">
 <!ENTITY inspectNextButton.label      "Next">
 <!ENTITY inspectNextButton.accesskey  "N">
 <!ENTITY inspectPreviousButton.label  "Previous">
 <!ENTITY inspectPreviousButton.accesskey "P">
 <!ENTITY inspectStyleButton.label     "Style">
diff --git a/browser/locales/en-US/chrome/browser/workspace.properties b/browser/locales/en-US/chrome/browser/workspace.properties
new file mode 100644
--- /dev/null
+++ b/browser/locales/en-US/chrome/browser/workspace.properties
@@ -0,0 +1,9 @@
+# LOCALIZATION NOTE  (propertyPanel.updateButton.label): Used in the Property
+# Panel that is opened by the Workspace window when inspecting an object. This
+# is the Update button label.
+propertyPanel.updateButton.label=Update
+propertyPanel.updateButton.accesskey=U
+
+# LOCALIZATION NOTE  (export.fileOverwriteConfirmation): This is displayed when
+# the user attempts to save to an already existing file.
+export.fileOverwriteConfirmation=File exists. Overwrite?
diff --git a/browser/locales/jar.mn b/browser/locales/jar.mn
--- a/browser/locales/jar.mn
+++ b/browser/locales/jar.mn
@@ -10,16 +10,17 @@
     locale/browser/aboutSessionRestore.dtd         (%chrome/browser/aboutSessionRestore.dtd)
 #ifdef MOZ_SERVICES_SYNC
     locale/browser/aboutSyncTabs.dtd               (%chrome/browser/aboutSyncTabs.dtd)
 #endif
 *   locale/browser/browser.dtd                     (%chrome/browser/browser.dtd)
     locale/browser/baseMenuOverlay.dtd             (%chrome/browser/baseMenuOverlay.dtd)
     locale/browser/browser.properties              (%chrome/browser/browser.properties)
     locale/browser/inspector.properties            (%chrome/browser/inspector.properties)
+    locale/browser/workspace.properties            (%chrome/browser/workspace.properties)
     locale/browser/openLocation.dtd                (%chrome/browser/openLocation.dtd)
     locale/browser/openLocation.properties         (%chrome/browser/openLocation.properties)
 *   locale/browser/pageInfo.dtd                    (%chrome/browser/pageInfo.dtd)
     locale/browser/pageInfo.properties             (%chrome/browser/pageInfo.properties)
     locale/browser/quitDialog.properties           (%chrome/browser/quitDialog.properties)
 *   locale/browser/safeMode.dtd                    (%chrome/browser/safeMode.dtd)
     locale/browser/sanitize.dtd                    (%chrome/browser/sanitize.dtd)
     locale/browser/search.properties               (%chrome/browser/search.properties)
