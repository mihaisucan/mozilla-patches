diff --git a/browser/base/content/tabview/groupitems.js b/browser/base/content/tabview/groupitems.js
--- a/browser/base/content/tabview/groupitems.js
+++ b/browser/base/content/tabview/groupitems.js
@@ -19,16 +19,17 @@
  * the Initial Developer. All Rights Reserved.
  *
  * Contributor(s):
  * Ian Gilman <ian@iangilman.com>
  * Aza Raskin <aza@mozilla.com>
  * Michael Yoshitaka Erlewine <mitcho@mitcho.com>
  * Ehsan Akhgari <ehsan@mozilla.com>
  * Raymond Lee <raymond@appcoast.com>
+ * Mihai Sucan <mihai.sucan@gmail.com>
  *
  * Alternatively, the contents of this file may be used under the terms of
  * either the GNU General Public License Version 2 or later (the "GPL"), or
  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  * in which case the provisions of the GPL or the LGPL are applicable instead
  * of those above. If you wish to allow use of your version of this file only
  * under the terms of either the GPL or the LGPL, and not to allow others to
  * use your version of this file under the terms of the MPL, indicate your
@@ -407,25 +408,73 @@ GroupItem.prototype = Utils.extend(new I
     // The * 6 multiplier calculation is assuming that characters in the title
     // are approximately 6 pixels wide. Bug 586545
     var css = {width: w};
     this.$title.css(css);
     this.$titleShield.css(css);
   },
 
   // ----------
+  // Function: adjustAppTabTray
+  // Used to adjust the appTabTray size, to split the appTabIcons across
+  // multiple columns when needed - if the groupItem size is too small.
+  //
+  // Parameters:
+  //   arrangeGroup - rearrange the groupItem if the number of appTab columns
+  //   changes. If true, then this.arrange() is called, otherwise not.
+  adjustAppTabTray: function GroupItem_adjustAppTabTray(arrangeGroup) {
+    var icons = iQ(".appTabIcon", this.$appTabTray);
+    if (!icons.length) {
+      if (parseInt(this.$appTabTray.css("-moz-column-count")) != 0) {
+        this.$appTabTray.css("-moz-column-count", 0);
+        this.$appTabTray.css("width", 0);
+        this.$appTabTray.css("height", 0);
+        if (arrangeGroup) {
+          this.arrange();
+        }
+      }
+      return;
+    }
+
+    var iconHeight = parseInt(iQ(icons[0]).height());
+    var contentHeight = parseInt(this.getContentBounds().height);
+    var rows = Math.floor(contentHeight / iconHeight);
+    var columns = Math.ceil(icons.length / rows);
+    var oldColumns = parseInt(this.$appTabTray.css("-moz-column-count"));
+
+    this.$appTabTray.css("-moz-column-count", columns);
+    this.$appTabTray.css("height", contentHeight + "px");
+
+    // Make sure width is auto.
+    var widthUpdated = false;
+    if (parseInt(this.$appTabTray.css("width")) == 0) {
+      this.$appTabTray.css("width", "auto");
+      widthUpdated = true;
+    }
+
+    // Rearrange the groupItem if the width changed in some way.
+    if (arrangeGroup && (widthUpdated || oldColumns != columns)) {
+      this.arrange();
+    }
+  },
+
+  // ----------
   // Function: getContentBounds
   // Returns a <Rect> for the groupItem's content area (which doesn't include the title, etc).
   getContentBounds: function GroupItem_getContentBounds() {
     var box = this.getBounds();
     var titleHeight = this.$titlebar.height();
     box.top += titleHeight;
     box.height -= titleHeight;
 
     var appTabTrayWidth = this.$appTabTray.width();
+    if (appTabTrayWidth > 0) {
+      appTabTrayWidth += parseInt(this.$appTabTray.css(UI.rtl ? "left" : "right"));
+    }
+
     box.width -= appTabTrayWidth;
     if (UI.rtl) {
       box.left += appTabTrayWidth;
     }
 
     // Make the computed bounds' "padding" and new tab button margin actually be
     // themeable --OR-- compute this from actual bounds. Bug 586546
     box.inset(6, 6);
@@ -482,16 +531,19 @@ GroupItem.prototype = Utils.extend(new I
     }
 
     if (Utils.isEmptyObject(css))
       return;
 
     var offset = new Point(rect.left - this.bounds.left, rect.top - this.bounds.top);
     this.bounds = new Rect(rect);
 
+    // Make sure the AppTab icons fit the new groupItem size.
+    this.adjustAppTabTray();
+
     // ___ Deal with children
     if (css.width || css.height) {
       this.arrange({animate: !immediately}); //(immediately ? 'sometimes' : true)});
     } else if (css.left || css.top) {
       this._children.forEach(function(child) {
         var box = child.getBounds();
         child.setPosition(box.left + offset.x, box.top + offset.y, immediately);
       });
@@ -1039,40 +1091,33 @@ GroupItem.prototype = Utils.extend(new I
         if (Utils.isRightClick(event))
           return;
 
         GroupItems.setActiveGroupItem(self);
         UI.goToTab(iQ(this).data("xulTab"));
       });
 
     // adjust the tray
-    let columnWidth = $appTab.width();
-    if (parseInt(this.$appTabTray.css("width")) != columnWidth) {
-      this.$appTabTray.css({width: columnWidth});
-      this.arrange();
-    }
+    this.adjustAppTabTray(true);
   },
 
   // ----------
   // Removes the given xul:tab as an app tab in this group's apptab tray
   removeAppTab: function GroupItem_removeAppTab(xulTab) {
     // remove the icon
     iQ(".appTabIcon", this.$appTabTray).each(function(icon) {
       let $icon = iQ(icon);
       if ($icon.data("xulTab") != xulTab)
         return;
         
       $icon.remove();
     });
     
     // adjust the tray
-    if (!iQ(".appTabIcon", this.$appTabTray).length) {
-      this.$appTabTray.css({width: 0});
-      this.arrange();
-    }
+    this.adjustAppTabTray(true);
 
     xulTab.removeEventListener("error", this._onAppTabError, false);
   },
 
   // ----------
   // Function: hideExpandControl
   // Hide the control which expands a stacked groupItem into a quick-look view.
   hideExpandControl: function GroupItem_hideExpandControl() {
diff --git a/browser/themes/gnomestripe/browser/tabview/tabview.css b/browser/themes/gnomestripe/browser/tabview/tabview.css
--- a/browser/themes/gnomestripe/browser/tabview/tabview.css
+++ b/browser/themes/gnomestripe/browser/tabview/tabview.css
@@ -95,17 +95,18 @@ html[dir=rtl] .favicon {
   background: url("moz-icon://stock/gtk-close?size=menu") no-repeat;
 }
 
 html[dir=rtl] .close {
   right: auto;
   left: 6px;
 }
 
-.close:hover {
+.close:hover,
+.appTabIcon:hover {
   opacity: 1.0;
 }
 
 .expander {
   bottom: 8px;
   right: 6px;
   width: 16px;
   height: 16px;
@@ -119,17 +120,18 @@ html[dir=rtl] .expander {
   -moz-transform: scaleX(-1);
 }
 
 .expander:hover {
   opacity: 1.0;
 }
 
 .close:hover,
-.expander:hover {
+.expander:hover,
+.appTabIcon:hover {
   -moz-transition-property: opacity;
   -moz-transition-duration: 0.5s;
   -moz-transition-timing-function: ease-out;
 }
 
 .favicon img:hover, 
 .close img:hover, 
 .expander img:hover {
@@ -239,28 +241,40 @@ html[dir=rtl] .groupItem.activeGroupItem
 }
 
 html[dir=rtl] .overlay {
   box-shadow: -3px 3px 5.5px rgba(0,0,0,.5);
 }
 
 .appTabTray {
   top: 34px;
-  right: 1px;
+  right: 6px;
+  -moz-column-width: 16px;
+  -moz-column-count: 1;
+  -moz-column-gap: 4px;
+  border-left: 1px inset rgba(250,250,250,.2);
+  padding-left: 5px;
 }
 
 html[dir=rtl] .appTabTray {
   right: auto;
-  left: 1px;
+  left: 6px;
+  border-left: 0;
+  border-right: 1px inset rgba(250,250,250,.2);
+  padding-left: 0;
+  padding-right: 5px;
 }
 
 .appTabIcon {
   width: 16px;
   height: 16px;
   cursor: pointer;
+  opacity: 0.8;
+  padding-bottom: 3px;
+  display: block;
 }
 
 .undo {
   background-color: #A0A0A0;
   width: 150px;
   height: 30px;
   line-height: 30px;
   box-shadow: 0px 1px 0px rgba(255,255,255,.5), 0px -1px 0px rgba(0,0,0,.24);
diff --git a/browser/themes/pinstripe/browser/tabview/tabview.css b/browser/themes/pinstripe/browser/tabview/tabview.css
--- a/browser/themes/pinstripe/browser/tabview/tabview.css
+++ b/browser/themes/pinstripe/browser/tabview/tabview.css
@@ -107,17 +107,18 @@ html[dir=rtl] .close {
 
 html[dir=rtl] .expander {
   right: auto;
   left: 6px;
   -moz-transform: scaleX(-1);
 }
 
 .close:hover,
-.expander:hover {
+.expander:hover,
+.appTabIcon:hover {
   -moz-transition-property: opacity;
   -moz-transition-duration: 0.5s;
   -moz-transition-timing-function: ease-out;
   opacity: 1.0;
 }
 
 .favicon img:hover, 
 .close img:hover, 
@@ -232,28 +233,40 @@ html[dir=rtl] .groupItem.activeGroupItem
 }
 
 html[dir=rtl] .overlay {
   box-shadow: -3px 3px 5.5px rgba(0,0,0,.5);
 }
 
 .appTabTray {
   top: 34px;
-  right: 1px;
+  right: 6px;
+  -moz-column-width: 16px;
+  -moz-column-count: 1;
+  -moz-column-gap: 4px;
+  border-left: 1px inset rgba(250,250,250,.2);
+  padding-left: 5px;
 }
 
 html[dir=rtl] .appTabTray {
   right: auto;
-  left: 1px;
+  left: 6px;
+  border-left: 0;
+  border-right: 1px inset rgba(250,250,250,.2);
+  padding-left: 0;
+  padding-right: 5px;
 }
 
 .appTabIcon {
   width: 16px;
   height: 16px;
   cursor: pointer;
+  opacity: 0.8;
+  padding-bottom: 3px;
+  display: block;
 }
 
 .undo {
   background-color: #A0A0A0;
   width: 150px;
   height: 30px;
   line-height: 30px;
   box-shadow: 0px 1px 0px rgba(255,255,255,.5), 0px -1px 0px rgba(0,0,0,.24);
diff --git a/browser/themes/winstripe/browser/tabview/tabview.css b/browser/themes/winstripe/browser/tabview/tabview.css
--- a/browser/themes/winstripe/browser/tabview/tabview.css
+++ b/browser/themes/winstripe/browser/tabview/tabview.css
@@ -114,17 +114,18 @@ html[dir=rtl] .close {
 
 html[dir=rtl] .expander {
   right: auto;
   left: 6px;
   -moz-transform: scaleX(-1);
 }
 
 .close:hover,
-.expander:hover {
+.expander:hover,
+.appTabIcon:hover {
   -moz-transition-property: opacity;
   -moz-transition-duration: 0.5s;
   -moz-transition-timing-function: ease-out;
   opacity: 1.0;
 }
 
 .favicon img:hover, 
 .close img:hover, 
@@ -259,28 +260,40 @@ html[dir=rtl] .groupItem.activeGroupItem
 }
 
 html[dir=rtl] .overlay {
   box-shadow: -3px 3px 5.5px rgba(0,0,0,.5);
 }
 
 .appTabTray {
   top: 34px;
-  right: 1px;
+  right: 6px;
+  -moz-column-width: 16px;
+  -moz-column-count: 1;
+  -moz-column-gap: 4px;
+  border-left: 1px inset rgba(250,250,250,.2);
+  padding-left: 5px;
 }
 
 html[dir=rtl] .appTabTray {
   right: auto;
-  left: 1px;
+  left: 6px;
+  border-left: 0;
+  border-right: 1px inset rgba(250,250,250,.2);
+  padding-left: 0;
+  padding-right: 5px;
 }
 
 .appTabIcon {
   width: 16px;
   height: 16px;
   cursor: pointer;
+  opacity: 0.8;
+  padding-bottom: 3px;
+  display: block;
 }
 
 .undo {
   background-color: #A0A0A0;
   width: 150px;
   height: 30px;
   line-height: 30px;
   box-shadow: 0px 1px 0px rgba(255,255,255,.5), 0px -1px 0px rgba(0,0,0,.24);
